package sec03.brd03;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.RequestDispatcher;
import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.io.FileUtils;


// @WebServlet("/board/*")
public class BoardController extends HttpServlet {
	private static String ARTICLE_IMAGE_REPO = "C:/board/article_image";	// 첨부이미지 저장경로
	BoardService boardService;
	ArticleVO articleVO;

	public void init(ServletConfig config) throws ServletException {
		boardService = new BoardService();
		articleVO = new ArticleVO();
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doHandle(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response)	throws ServletException, IOException {
		doHandle(request, response);
	}

	private void doHandle(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String nextPage = "";												// nextPage 초기화
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		String action = request.getPathInfo();								// 요청 action에 저장
		System.out.println("action:" + action);								// console에 action 출력
		try {
			List<ArticleVO> articlesList = new ArrayList<ArticleVO>();
			if (action == null) {											// action이 없으면
				articlesList = boardService.listArticles();					// 글목록 출력
				request.setAttribute("articlesList", articlesList);
				nextPage = "/board02/listArticles.jsp";						// board02/listArticles.jsp로 전달
				
			} else if (action.equals("/listArticles.do")) {					// 글목록 보기를 요청하면
				articlesList = boardService.listArticles();
				request.setAttribute("articlesList", articlesList);
				nextPage = "/board02/listArticles.jsp";						// 리스트로 전달
				
			} else if (action.equals("/articleForm.do")) {					// 글쓰기를 누르면
				nextPage = "/board02/articleForm.jsp";						// 글쓰기 폼으로 전송
				
			} else if (action.equals("/addArticle.do")) {					// 글쓰기 버튼을 누르면
				int articleNO=0;											// articleNO 초기화 (제일 앞번호로)
				Map<String, String> articleMap = upload(request, response);
				String title = articleMap.get("title");						// 제목 받아오기
				String content = articleMap.get("content");					// 내용 받아옴
				String imageFileName = articleMap.get("imageFileName");		// 첨부 이미지 받아옴
				articleVO.setParentNO(0);								
				articleVO.setId("park");
				articleVO.setTitle(title);
				articleVO.setContent(content);
				articleVO.setImageFileName(imageFileName);
				articleNO= boardService.addArticle(articleVO);
				
				if(imageFileName!=null && imageFileName.length()!=0) { 		// 이미지 첨부를 했을 경우
				    File srcFile = new 	File(ARTICLE_IMAGE_REPO +"/"+"temp"+"/"+imageFileName);	// 첨부파일 저장경로
					File destDir = new File(ARTICLE_IMAGE_REPO +"/"+articleNO);					// 글번호 폴더 지정
					destDir.mkdirs();															// 글번호 폴더 생성
					FileUtils.moveFileToDirectory(srcFile, destDir, true);				// 저장된 첨부파일 글번호 폴더로 이동
				}
				PrintWriter pw = response.getWriter();
				pw.print("<script>" 
				         +"  alert('새 글을 추가했습니다');" 
						 +" location.href='"+request.getContextPath()+"/board/listArticles.do';"
				         +"</script>");

				return;
			}

			RequestDispatcher dispatch = request.getRequestDispatcher(nextPage);
			dispatch.forward(request, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private Map<String, String> upload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Map<String, String> articleMap = new HashMap<String, String>();
		String encoding = "utf-8";
		File currentDirPath = new File(ARTICLE_IMAGE_REPO);
		DiskFileItemFactory factory = new DiskFileItemFactory();
		factory.setRepository(currentDirPath);
		factory.setSizeThreshold(1024 * 1024);
		ServletFileUpload upload = new ServletFileUpload(factory);
		try {
			List items = upload.parseRequest(request);
			for (int i = 0; i < items.size(); i++) {
				FileItem fileItem = (FileItem) items.get(i);
				if (fileItem.isFormField()) {
					System.out.println(fileItem.getFieldName() + "=" + fileItem.getString(encoding));
					articleMap.put(fileItem.getFieldName(), fileItem.getString(encoding));
				} else {
					System.out.println("파라미터명:" + fileItem.getFieldName());
					System.out.println("파일명:" + fileItem.getName());
					System.out.println("파일크기:" + fileItem.getSize() + "bytes");
					//articleMap.put(fileItem.getFieldName(), fileItem.getName());
					if (fileItem.getSize() > 0) {
						int idx = fileItem.getName().lastIndexOf("\\");
						if (idx == -1) {
							idx = fileItem.getName().lastIndexOf("/");
						}

						String fileName = fileItem.getName().substring(idx + 1);
						System.out.println("파일명:" + fileName);
						articleMap.put(fileItem.getFieldName(), fileName);  
						File uploadFile = new File(currentDirPath + "/temp/" + fileName);
						fileItem.write(uploadFile);				// 첨부파일을 tmp에 먼저 업로드

					} // end if
				} // end if
			} // end for
		} catch (Exception e) {
			e.printStackTrace();
		}
		return articleMap;
	}

}
