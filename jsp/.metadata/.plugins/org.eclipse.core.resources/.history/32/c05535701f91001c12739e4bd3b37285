package sec02.ex01;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


// @WebServlet("/member/*")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	MemberDAO memberDAO;

	public void init() throws ServletException {
		memberDAO = new MemberDAO();
	}

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doHandle(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doHandle(request, response);
	}

	private void doHandle(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String nextPage = null;											// nextPage 값 초기화                                          
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		String action = request.getPathInfo();							// 요청을 action에 저장
		System.out.println("action:" + action);							// action을 콘솔창에 표시
		
		if (action == null || action.equals("/listMembers.do")) {		// action의 요청값이 없었거나 listMember에 존재한다면
			List<MemberVO> membersList = memberDAO.listMembers();
			request.setAttribute("membersList", membersList);			// memberrList에 저장
			nextPage = "/test02/listMembers.jsp";						// nextPage에 test02/listMembers.jsp로 포워딩값 지정
		} else if (action.equals("/addMember.do")) {					// action의 요청값이 addMember라면
			String id = request.getParameter("id");						// id,pw 등 정보를 MemberVO에 저장
			String pwd = request.getParameter("pwd");
			String name = request.getParameter("name");
			String email = request.getParameter("email");
			MemberVO memberVO = new MemberVO(id, pwd, name, email);
			memberDAO.addMember(memberVO);
			nextPage = "/member/listMembers.do";						// listMembers를 출력

		} else if (action.equals("/memberForm.do")) {					// action의 요청값이 memberForm.do라면
			nextPage = "/test02/memberForm.jsp";						// test02/memberForm.jsp로 포워딩
		} else {
			List<MemberVO> membersList = memberDAO.listMembers();
			request.setAttribute("membersList", membersList);			// memberList 출력
			nextPage = "/test02/listMembers.jsp";
		}
		RequestDispatcher dispatch = request.getRequestDispatcher(nextPage);	// nextPage로 전달
		dispatch.forward(request, response);
	}

}